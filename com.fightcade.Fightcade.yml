app-id: com.fightcade.Fightcade
base: org.electronjs.Electron2.BaseApp
base-version: '21.08'
runtime: org.freedesktop.Platform
runtime-version: '21.08'
sdk: org.freedesktop.Sdk
command: fightcade
tags:
  - proprietary

# Support 32-bit at runtime
add-extensions:
  org.freedesktop.Platform.Compat.i386:
    directory: lib/i386-linux-gnu
    version: '21.08'

  org.freedesktop.Platform.Compat.i386.Debug:
    directory: lib/debug/lib/i386-linux-gnu
    version: '21.08'
    no-autodownload: true

  org.freedesktop.Platform.GL32:
    directory: lib/i386-linux-gnu/GL
    version: '1.4'
    versions: 21.08;1.4
    subdirectories: true
    no-autodownload: true
    autodelete: false
    add-ld-path: lib
    merge-dirs: vulkan/icd.d;glvnd/egl_vendor.d;OpenCL/vendors;lib/dri;lib/d3d;vulkan/explicit_layer.d
    download-if: active-gl-driver
    enable-if: active-gl-driver

  com.fightcade.Fightcade.Wine:
    directory: wine
    version: stable

# Support 32-bit at buildtime
sdk-extensions:
  - org.freedesktop.Sdk.Compat.i386
  - org.freedesktop.Sdk.Extension.toolchain-i386

finish-args:
  - --share=ipc
  - --socket=x11
  - --share=network
  - --socket=pulseaudio
  - --allow=multiarch
  - --talk-name=org.freedesktop.Notifications
  - --device=all
  # Persist Wineprefix as ~/.var/app/{fightcade}/.wine64
  - --persist=.wine64
  # Skip Gecko and Mono popups when creating Wine prefix
  - --env=WINEDLLOVERRIDES=mscoree,mshtml=
  # Support 32-bit runtime
  - --env=LD_LIBRARY_PATH=/app/lib:/app/lib32

modules:
  # Create 32-bit and wine directories
  - name: compat
    buildsystem: simple
    build-commands:
      - mkdir -p /app/lib/i386-linux-gnu /app/lib/debug/lib/i386-linux-gnu
      - install -d /app/wine

  - name: fightcade
    buildsystem: simple
    build-commands:
      - mkdir -p /app/fightcade/Fightcade
      - mkdir -p /app/fightcade/Resources
      # Symlink jc2json dir
      - ln -s /var/data/fbneo_roms.json emulator/fbneo_roms.json
      - ln -s /var/data/snes9x_roms.json emulator/snes9x_roms.json
      - ln -s /var/data/flycast_roms.json emulator/flycast_roms.json
      - ln -s /var/data/nulldc_roms.json emulator/nulldc_roms.json
      - ln -s /var/data/fc1_roms.json emulator/fc1_roms.json
      # Symlink the ROMs folder to persistent directories
      - rmdir emulator/fbneo/ROMs
      - ln -s /var/data/ROMs/fbneo emulator/fbneo/ROMs
      - rmdir emulator/ggpofba/ROMs
      - ln -s /var/data/ROMs/ggpofba emulator/ggpofba/ROMs
      - rmdir emulator/snes9x/ROMs
      - ln -s /var/data/ROMs/snes9x emulator/snes9x/ROMs
      - rmdir emulator/flycast/ROMs
      - ln -s /var/data/ROMs/flycast emulator/flycast/ROMs
      # Log files Fightcade expects to be able to write to
      - ln -s /var/data/logs/fcade-errors.log emulator/fcade-errors.log
      - ln -s /var/data/logs/fcade.log emulator/fcade.log
      - ln -s /var/data/logs/fcade.log.1 emulator/fcade.log.1
      - ln -s /var/data/logs/fcade.log.2 emulator/fcade.log.3
      - ln -s /var/data/logs/fcade.log.3 emulator/fcade.log.2
      # Symlink emulator configs to writable directories
      # FBNeo fixes
      - rm -rf emulator/fbneo/config
      - ln -s /var/data/config/fcadefbneo emulator/fbneo/config
      - ln -s /var/data/config/snes9x/fcadesnes9x.conf emulator/snes9x/fcadesnes9x.conf
      # Snes9x fixes
      - ln -s /var/data/config/snes9x/Valid.Ext emulator/snes9x/Valid.Ext
      - ln -s /var/data/config/snes9x/stdout.txt emulator/snes9x/stdout.txt
      - ln -s /var/data/config/snes9x/stderr.txt emulator/snes9x/stderr.txt
      - rm -r emulator/snes9x/Saves
      - ln -s /var/data/config/snes9x/Saves emulator/snes9x/Saves
      # Flycast fixes
      - ln -s /var/data/config/flycast/emu.cfg emulator/flycast/emu.cfg
      - ln -s /var/data/config/flycast/mappings emulator/flycast/mappings
      # Wine wrapper
      - install -Dm755 wine.sh /app/fightcade/Resources/wine.sh
      - cp -R * /app/fightcade/Fightcade
    sources:
      - type: archive
        url: https://web.fightcade.com/download/Fightcade-linux-v2.1.18.tar.gz
        sha256: 4706d844ba34034d0cf231283fd96dbf1f8fd0d9bbb90fa582587a24618e8d1a
        x-checker-data:
          type: html
          url: https://web.fightcade.com/download/update.json
          version-pattern: Fightcade-linux-v([\d.]+).tar.gz
          url-template: https://web.fightcade.com/download/Fightcade-linux-v${version}.tar.gz
      - type: script
        dest-filename: wine.sh
        # Due to switching from 32-bit wine to WoW64, we need to create a 64 bit prefix.
        # Rather than doing a migration we'll just move to a new ~/.wine64 prefix
        commands:
          - export WINEPREFIX=~/.wine64
          - /app/bin/wine "$@"

  - name: fightcade-extra
    buildsystem: simple
    build-commands:
      - install -Dm755 com.fightcade.Fightcade.desktop /app/share/applications/com.fightcade.Fightcade.desktop
      - install -Dm755 fcade-quark.desktop /app/share/applications/com.fightcade.Fightcade.fcade-quark.desktop
      - install -Dm755 fightcade-launcher.sh /app/bin/fightcade
      - install -Dm755 fcade-quark.sh /app/bin/fcade-quark
      - install -Dm755 com.fightcade.Fightcade-64.png /app/share/icons/hicolor/64x64/apps/com.fightcade.Fightcade.png
      - install -Dm755 com.fightcade.Fightcade-128.png /app/share/icons/hicolor/128x128/apps/com.fightcade.Fightcade.png
      - install -Dm755 com.fightcade.Fightcade-256.png /app/share/icons/hicolor/256x256/apps/com.fightcade.Fightcade.png
      - install -Dm644 metainfo.xml /app/share/metainfo/com.fightcade.Fightcade.metainfo.xml
    sources:
      - type: file
        path: com.fightcade.Fightcade.desktop
      - type: file
        path: fcade-quark.desktop
      - type: file
        path: icons/com.fightcade.Fightcade-64.png
      - type: file
        path: icons/com.fightcade.Fightcade-128.png
      - type: file
        path: icons/com.fightcade.Fightcade-256.png
      - type: file
        path: scripts/fightcade-launcher.sh
      - type: file
        path: scripts/fcade-quark.sh
      - type: file
        path: metainfo.xml

  # Flycast native needs libcurl-gnutls
  - name: libcurl-gnutls
    buildsystem: simple
    build-commands:
      - ARCH_TRIPLE=$(gcc --print-multiarch) && ln -s /usr/lib/${ARCH_TRIPLE}/libcurl.so.4
        /app/lib/libcurl-gnutls.so.4

  - name: libzip
    buildsystem: cmake-ninja
    config-opts:
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_INSTALL_LIBDIR=lib
    cleanup:
      - /include
      - /bin
      - /share
      - /lib/pkgconfig
      - /lib/*.la
    sources:
      - type: archive
        url: https://libzip.org/download/libzip-1.7.3.tar.xz
        sha256: a60473ffdb7b4260c08bfa19c2ccea0438edac11193c3afbbb1f17fbcf6c6132

  - name: miniupnpc
    buildsystem: cmake-ninja
    sources:
      - type: archive
        url: https://miniupnp.tuxfamily.org/files/miniupnpc-2.2.2.tar.gz
        sha256: 888fb0976ba61518276fe1eda988589c700a3f2a69d71089260d75562afd3687

  - name: faudio32
    buildsystem: cmake-ninja
    build-options:
      prepend-pkg-config-path: /app/lib32/pkgconfig:/usr/lib/i386-linux-gnu/pkgconfig
      ldflags: -L/app/lib32
      prepend-path: /usr/lib/sdk/toolchain-i386/bin
      env:
        CC: i686-unknown-linux-gnu-gcc
        CXX: i686-unknown-linux-gnu-g++
      libdir: /app/lib32
      strip: true
      no-debuginfo: true
    config-opts:
      - -DGSTREAMER=ON
    sources:
      - type: archive
        url: https://github.com/FNA-XNA/FAudio/archive/20.12.tar.gz
        sha256: d5a1656ec79cd2878dddabc07d7f7848c11844595c76033aed929b10d922c009

  - name: faudio64
    buildsystem: cmake-ninja
    build-options:
      strip: true
      no-debuginfo: true
    config-opts:
      - -DGSTREAMER=ON
    sources:
      - type: archive
        url: https://github.com/FNA-XNA/FAudio/archive/20.12.tar.gz
        sha256: d5a1656ec79cd2878dddabc07d7f7848c11844595c76033aed929b10d922c009

  - name: wine-wow64
    builddir: true
    build-options:
      make-args: -j5
      prefix: /app
      prepend-path: /app/bin
      ldflags: -L/app/lib64 -L/app/lib32
      append-path: /usr/lib/sdk/toolchain-i386/bin
      env:
        CC: i686-unknown-linux-gnu-gcc
        CXX: i686-unknown-linux-gnu-g++
      libdir: /app/lib32
      strip: true
      no-debuginfo: true
    make-install-args:
      - LDCONFIG=/bin/true
      - STRIP=/bin/true
      - UPDATE_DESKTOP_DATABASE=/bin/true
    buildsystem: simple
    build-commands:
    # 1. Build wine64
      - export CC=x86_64-unknown-linux-gnu-gcc  && export CXX=x86_64-unknown-linux-gnu-g++
        && mkdir wine64-build && cd wine64-build   && ../configure --prefix="/app"
        --disable-win16 --enable-shared --disable-static --disable-tests --with-x
        --without-cups --without-curses --without-capi --without-glu --without-gphoto
        --without-gsm --without-hal --without-ldap --with-faudio --without-netapi
        --enable-win64 && make -j5
    # 2. Build wine32 twice
      - export CC=i686-unknown-linux-gnu-gcc  && export CXX=i686-unknown-linux-gnu-g++
        && mkdir wine32-tools && cd wine32-tools && ../configure --prefix="/app" --disable-win16
        --enable-shared --disable-static --disable-tests --with-x --without-cups --without-curses
        --without-capi --without-glu --without-gphoto --without-gsm --without-hal
        --without-ldap --with-faudio --without-netapi && make -j5
    # 3. Build 32bit second time and
    # install 32 bit and 64 bit wine
      - export CC=i686-unknown-linux-gnu-gcc  && export CXX=i686-unknown-linux-gnu-g++
        && mkdir wine32-combo && cd wine32-combo && ../configure --with-wine64=../wine64-build
        --with-wine-tools=../wine32-tools --prefix="/app" --disable-win16 --enable-shared
        --disable-static --disable-tests --with-x --without-cups --without-curses
        --without-capi --without-glu --without-gphoto --without-gsm --without-hal
        --without-ldap --with-faudio --without-netapi   && make -j5           && make
        install       && cd ../wine64-build && make install
    cleanup:
      - '*.a'
      - '*.la'
      - /include
      - /lib/pkgconfig
      - /lib32/pkgconfig
      - /lib/cmake
      - /lib32/cmake
      - /share/man

      - /bin/function_grep.pl
      - /bin/widl
      - /bin/winebuild
      - /bin/winecpp
      - /bin/winedump
      - /bin/wineg++
      - /bin/winegcc
      - /bin/winemaker
      - /bin/wmc
      - /bin/wrc

      - /lib/wine/*.def
      - /lib32/wine/*.def
    sources:
      - type: archive
        url: https://dl.winehq.org/wine/source/5.0/wine-5.0.2.tar.xz
        sha256: c2c284f470874b35228327c3972bc29c3a9d8d98abd71dbf81c288b8642becbc
